{"ast":null,"code":"import _objectSpread from \"/home/eric/Desktop/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/eric/Desktop/burger-builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n    console.log('Constructor Happened');\n  }\n\n  componentDidMount() {\n    axios.get('/orders.json').then(res => {\n      const fetchedOrders = [];\n\n      for (let key in res.data) {\n        fetchedOrders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n      }\n\n      this.setState({\n        loading: false,\n        orders: fetchedOrders\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.orders.map(order => React.createElement(Order, {\n      key: order.id,\n      ingredients: order.ingredients,\n      price: order.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["/home/eric/Desktop/burger-builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","Orders","constructor","props","state","orders","loading","console","log","componentDidMount","get","then","res","fetchedOrders","key","data","push","id","setState","catch","err","render","map","order","ingredients","price"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAM3BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SALlBC,KAKkB,GALV;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAKU;AAEdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,KAAK,CAACW,GAAN,CAAU,cAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAMC,aAAa,GAAG,EAAtB;;AACA,WAAI,IAAIC,GAAR,IAAeF,GAAG,CAACG,IAAnB,EAAwB;AACpBF,QAAAA,aAAa,CAACG,IAAd,mBACOJ,GAAG,CAACG,IAAJ,CAASD,GAAT,CADP;AAEIG,UAAAA,EAAE,EAAEH;AAFR;AAIH;;AACD,WAAKI,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAE,KAAV;AAAiBD,QAAAA,MAAM,EAAGQ;AAA1B,OAAd;AACH,KAVL,EAUOM,KAVP,CAUaC,GAAG,IAAI;AACZ,WAAKF,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH,KAZL;AAcH;;AAEDe,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAsBC,KAAK,IAC1B,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAGA,KAAK,CAACN,EAAnB;AACA,MAAA,WAAW,EAAIM,KAAK,CAACC,WADrB;AAEA,MAAA,KAAK,EAAID,KAAK,CAACE,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADL,CADJ;AASH;;AAvC0B;;AA0C/B,eAAezB,gBAAgB,CAACC,MAAD,EAASF,KAAT,CAA/B","sourcesContent":["import React, { Component } from 'react';\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true,\n    }\n\n    constructor(props){\n        super(props);\n        console.log('Constructor Happened')\n    }\n    \n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for(let key in res.data){\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                this.setState({loading: false, orders : fetchedOrders})\n            }).catch(err => {\n                this.setState({loading:false})\n            })\n\n    }\n    \n    render(){\n        \n        return(\n            <div>\n                {this.state.orders.map(order =>\n                  <Order key= {order.id}\n                  ingredients = {order.ingredients}\n                  price = {order.price}/>  )}\n            </div>\n            \n        )\n    }\n}\n\nexport default withErrorHandler(Orders, axios);"]},"metadata":{},"sourceType":"module"}