{"ast":null,"code":"import _objectSpread from \"/home/eric/Desktop/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/eric/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'; // import Backdrop from '../../components/UI/Backdrop/Backdrop'\n\nconst INGREDIENT_PRICES = {\n  salad: .25,\n  cheese: .25,\n  meat: .75,\n  bacon: .50\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: .75,\n      canBuy: false,\n      isBuying: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        isBuying: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedCount = this.state.ingredients[type] + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.subtractIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const newCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = newCount;\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        isBuying: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert('You choose to continue!');\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      canBuy: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.isBuying,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" \", React.createElement(OrderSummary, {\n      price: this.state.totalPrice.toFixed(2),\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      price: `$ ${this.state.totalPrice.toFixed(2)}`,\n      ingredientAdded: this.addIngredientHandler,\n      ingredientSubtracted: this.subtractIngredientHandler,\n      disabled: disabledInfo,\n      canBuy: this.state.canBuy,\n      isBuying: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/eric/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","canBuy","isBuying","purchaseHandler","setState","addIngredientHandler","type","updatedCount","updatedIngredients","newPrice","updatePurchaseState","subtractIngredientHandler","oldCount","newCount","purchaseCancelHandler","purchaseContinueHandler","alert","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\n// import Backdrop from '../../components/UI/Backdrop/Backdrop'\n\nconst INGREDIENT_PRICES = {\n  salad: .25,\n  cheese: .25,\n  meat: .75,\n  bacon: .50\n}\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: .75,\n    canBuy: false,\n    isBuying: false,\n  }\n\n  purchaseHandler = () => {\n    this.setState({isBuying: true});\n  }\n\n  updatePurchaseState (ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey]\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    this.setState({canBuy : sum > 0});\n  }\n\n  addIngredientHandler = (type) => {\n    const updatedCount = this.state.ingredients[type] + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    }\n    updatedIngredients[type] = updatedCount;\n    const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n    this.updatePurchaseState(updatedIngredients);\n\n  }\n\n  subtractIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const newCount = oldCount -1\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = newCount;\n    const newPrice = this.state.totalPrice -INGREDIENT_PRICES[type];\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n    this.updatePurchaseState(updatedIngredients);\n\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({isBuying: false})\n  }\n\n  purchaseContinueHandler = () => {\n    alert('You choose to continue!')\n  }\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for(let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0\n    }\n    return(\n      <Aux>\n        <Modal\n          show ={this.state.isBuying}\n          modalClosed = {this.purchaseCancelHandler}> <OrderSummary\n            price = {this.state.totalPrice.toFixed(2)}\n            ingredients = {this.state.ingredients}\n            purchaseCancelled = {this.purchaseCancelHandler}\n            purchaseContinued = {this.purchaseContinueHandler} />\n        </Modal>\n        <Burger\n          ingredients = {this.state.ingredients} />\n        <BuildControls\n          price = {`$ ${this.state.totalPrice.toFixed(2)}`}\n          ingredientAdded = {this.addIngredientHandler}\n          ingredientSubtracted = {this.subtractIngredientHandler}\n          disabled ={disabledInfo}\n          canBuy = {this.state.canBuy}\n          isBuying = {this.purchaseHandler}/>\n      </Aux>\n    );\n  }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}