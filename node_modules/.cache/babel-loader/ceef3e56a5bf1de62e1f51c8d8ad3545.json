{"ast":null,"code":"import _objectSpread from \"/home/eric/Desktop/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/eric/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders.js';\nimport Spinner from '../../components/UI/Spinner/Spinner'; // import Backdrop from '../../components/UI/Backdrop/Backdrop'\n\nconst INGREDIENT_PRICES = {\n  salad: .25,\n  cheese: .25,\n  meat: .75,\n  bacon: .50\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: .75,\n      canBuy: false,\n      isBuying: false,\n      loading: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        isBuying: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedCount = this.state.ingredients[type] + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.subtractIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const newCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = newCount;\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        isBuying: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Eric',\n          address: {\n            street: 'Teststreet',\n            zipcode: '97030',\n            state: 'OR'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false,\n          isBuying: false\n        });\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          isBuying: false\n        });\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      canBuy: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = React.createElement(OrderSummary, {\n      price: this.state.totalPrice.toFixed(2),\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.isBuying,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, orderSummary), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      price: `$ ${this.state.totalPrice.toFixed(2)}`,\n      ingredientAdded: this.addIngredientHandler,\n      ingredientSubtracted: this.subtractIngredientHandler,\n      disabled: disabledInfo,\n      canBuy: this.state.canBuy,\n      isBuying: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/eric/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","canBuy","isBuying","loading","purchaseHandler","setState","addIngredientHandler","type","updatedCount","updatedIngredients","newPrice","updatePurchaseState","subtractIngredientHandler","oldCount","newCount","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipcode","email","deliveryMethod","post","then","response","catch","err","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders.js'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\n// import Backdrop from '../../components/UI/Backdrop/Backdrop'\n\nconst INGREDIENT_PRICES = {\n  salad: .25,\n  cheese: .25,\n  meat: .75,\n  bacon: .50\n}\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: .75,\n    canBuy: false,\n    isBuying: false,\n    loading: false,\n  }\n\n  purchaseHandler = () => {\n    this.setState({isBuying: true});\n  }\n\n  updatePurchaseState (ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey]\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    this.setState({canBuy : sum > 0});\n  }\n\n  addIngredientHandler = (type) => {\n    const updatedCount = this.state.ingredients[type] + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    }\n    updatedIngredients[type] = updatedCount;\n    const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n    this.updatePurchaseState(updatedIngredients);\n\n  }\n\n  subtractIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const newCount = oldCount -1\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = newCount;\n    const newPrice = this.state.totalPrice -INGREDIENT_PRICES[type];\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n    this.updatePurchaseState(updatedIngredients);\n\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({isBuying: false})\n  }\n\n  purchaseContinueHandler = () => {\n    this.setState({loading : true})\n    const order = {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      customer: {\n        name: 'Eric',\n        address : {\n          street: 'Teststreet',\n          zipcode: '97030',\n          state: 'OR',\n        },\n        email: 'test@test.com',\n      },\n      deliveryMethod: 'fastest'\n    }\n\n    axios.post('/orders.json', order)\n    .then(response => {\n      this.setState({loading: false, isBuying: false})\n    })\n    .catch(err => {\n      this.setState({loading: false, isBuying: false})\n    });\n  }\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for(let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0\n    }\n    let orderSummary = <OrderSummary\n      price = {this.state.totalPrice.toFixed(2)}\n      ingredients = {this.state.ingredients}\n      purchaseCancelled = {this.purchaseCancelHandler}\n      purchaseContinued = {this.purchaseContinueHandler} />;\n\n      if (this.state.loading) {\n        orderSummary = <Spinner />;\n      }\n\n    return(\n      <Aux>\n        <Modal\n          show ={this.state.isBuying}\n          modalClosed = {this.purchaseCancelHandler}>\n          {orderSummary}\n        </Modal>\n        <Burger\n          ingredients = {this.state.ingredients} />\n        <BuildControls\n          price = {`$ ${this.state.totalPrice.toFixed(2)}`}\n          ingredientAdded = {this.addIngredientHandler}\n          ingredientSubtracted = {this.subtractIngredientHandler}\n          disabled ={disabledInfo}\n          canBuy = {this.state.canBuy}\n          isBuying = {this.purchaseHandler}/>\n      </Aux>\n    );\n  }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}