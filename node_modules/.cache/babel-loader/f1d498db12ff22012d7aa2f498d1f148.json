{"ast":null,"code":"import _objectSpread from \"/home/eric/Desktop/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/eric/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders.js';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'; // import Backdrop from '../../components/UI/Backdrop/Backdrop'\n\nconst INGREDIENT_PRICES = {\n  salad: .25,\n  cheese: .25,\n  meat: .75,\n  bacon: .50\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: .75,\n      canBuy: false,\n      isBuying: false,\n      loading: false,\n      error: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        isBuying: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedCount = this.state.ingredients[type] + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.subtractIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const newCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = newCount;\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        isBuying: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {// this.setState({loading : true})\n      // const order = {\n      //   ingredients: this.state.ingredients,\n      //   price: this.state.totalPrice,\n      //   customer: {\n      //     name: 'Eric',\n      //     address : {\n      //       street: 'Teststreet',\n      //       zipcode: '97030',\n      //       state: 'OR',\n      //     },\n      //     email: 'test@test.com',\n      //   },\n      //   deliveryMethod: 'fastest'\n      // }\n      // axios.post('/orders.json', order)\n      // .then(response => {\n      //   this.setState({loading: false, isBuying: false})\n      // })\n      // .catch(err => {\n      //   this.setState({loading: false, isBuying: false})\n      // });\n    };\n  }\n\n  // https://cors-anywhere.herokuapp.com/https://react-my-burger-ab5c1.firebaseio.com\n  componentDidMount() {\n    console.log(this.props);\n    console.log('[BurgerBuilder.js] did mount');\n    axios.get('/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(err => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      canBuy: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        price: `$ ${this.state.totalPrice.toFixed(2)}`,\n        ingredientAdded: this.addIngredientHandler,\n        ingredientSubtracted: this.subtractIngredientHandler,\n        disabled: disabledInfo,\n        canBuy: this.state.canBuy,\n        isBuying: this.purchaseHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        price: this.state.totalPrice.toFixed(2),\n        ingredients: this.state.ingredients,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.isBuying,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/eric/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","canBuy","isBuying","loading","error","purchaseHandler","setState","addIngredientHandler","type","updatedCount","updatedIngredients","newPrice","updatePurchaseState","subtractIngredientHandler","oldCount","newCount","purchaseCancelHandler","purchaseContinueHandler","componentDidMount","console","log","props","get","then","response","data","catch","err","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders.js'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n// import Backdrop from '../../components/UI/Backdrop/Backdrop'\n\nconst INGREDIENT_PRICES = {\n  salad: .25,\n  cheese: .25,\n  meat: .75,\n  bacon: .50\n}\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: null,\n    totalPrice: .75,\n    canBuy: false,\n    isBuying: false,\n    loading: false,\n    error: false\n  }\n// https://cors-anywhere.herokuapp.com/https://react-my-burger-ab5c1.firebaseio.com\n  componentDidMount () {\n    console.log(this.props)\n    console.log('[BurgerBuilder.js] did mount')\n    axios.get('/ingredients.json')\n    .then(response => {\n      this.setState({ingredients : response.data})\n    })\n    .catch(err => {\n      this.setState({error : true})\n    })\n  }\n\n  purchaseHandler = () => {\n    this.setState({isBuying: true});\n  }\n\n  updatePurchaseState (ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey]\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    this.setState({canBuy : sum > 0});\n  }\n\n  addIngredientHandler = (type) => {\n    const updatedCount = this.state.ingredients[type] + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    }\n    updatedIngredients[type] = updatedCount;\n    const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n    this.updatePurchaseState(updatedIngredients);\n\n  }\n\n  subtractIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const newCount = oldCount -1\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = newCount;\n    const newPrice = this.state.totalPrice -INGREDIENT_PRICES[type];\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n    this.updatePurchaseState(updatedIngredients);\n\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({isBuying: false})\n  }\n\n  purchaseContinueHandler = () => {\n    // this.setState({loading : true})\n    // const order = {\n    //   ingredients: this.state.ingredients,\n    //   price: this.state.totalPrice,\n    //   customer: {\n    //     name: 'Eric',\n    //     address : {\n    //       street: 'Teststreet',\n    //       zipcode: '97030',\n    //       state: 'OR',\n    //     },\n    //     email: 'test@test.com',\n    //   },\n    //   deliveryMethod: 'fastest'\n    // }\n\n    // axios.post('/orders.json', order)\n    // .then(response => {\n    //   this.setState({loading: false, isBuying: false})\n    // })\n    // .catch(err => {\n    //   this.setState({loading: false, isBuying: false})\n    // });\n  }\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for(let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0\n    }\n    let orderSummary = null;\n\n    let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\n\n    if(this.state.ingredients){\n     burger = (\n      <Aux>\n      <Burger ingredients = {this.state.ingredients} />\n    <BuildControls\n      price = {`$ ${this.state.totalPrice.toFixed(2)}`}\n      ingredientAdded = {this.addIngredientHandler}\n      ingredientSubtracted = {this.subtractIngredientHandler}\n      disabled ={disabledInfo}\n      canBuy = {this.state.canBuy}\n      isBuying = {this.purchaseHandler}/>\n      </Aux>\n    );\n    orderSummary = <OrderSummary\n      price = {this.state.totalPrice.toFixed(2)}\n      ingredients = {this.state.ingredients}\n      purchaseCancelled = {this.purchaseCancelHandler}\n      purchaseContinued = {this.purchaseContinueHandler} />;\n    }\n    if (this.state.loading) {\n      orderSummary = <Spinner />;\n    }\n\n    return(\n      <Aux>\n        <Modal\n          show ={this.state.isBuying}\n          modalClosed = {this.purchaseCancelHandler}>\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);\n"]},"metadata":{},"sourceType":"module"}