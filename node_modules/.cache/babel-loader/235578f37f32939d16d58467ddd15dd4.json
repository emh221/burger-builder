{"ast":null,"code":"import _objectSpread from \"/home/eric/Desktop/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/eric/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: .25,\n  cheese: .25,\n  meat: .75,\n  bacon: .50\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 2\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedCount = this.state.ingredients[type] + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.subtractIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const newCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = newCount;\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      price: `$ ${this.state.totalPrice.toFixed(2)}`,\n      ingredientAdded: this.addIngredientHandler,\n      ingredientSubtracted: this.subtractIngredientHandler,\n      disabled: disabledInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/eric/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","addIngredientHandler","type","updatedCount","updatedIngredients","newPrice","setState","subtractIngredientHandler","oldCount","newCount","render","disabledInfo","key","toFixed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,GADiB;AAExBC,EAAAA,MAAM,EAAE,GAFgB;AAGxBC,EAAAA,IAAI,EAAE,GAHkB;AAIxBC,EAAAA,KAAK,EAAE;AAJiB,CAA1B;;AAOA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCU,KADoC,GAC5B;AACNC,MAAAA,WAAW,EAAE;AACXN,QAAAA,KAAK,EAAE,CADI;AAEXG,QAAAA,KAAK,EAAE,CAFI;AAGXF,QAAAA,MAAM,EAAE,CAHG;AAIXC,QAAAA,IAAI,EAAE;AAJK,OADP;AAONK,MAAAA,UAAU,EAAE;AAPN,KAD4B;;AAAA,SAWpCC,oBAXoC,GAWZC,IAAD,IAAU;AAC/B,YAAMC,YAAY,GAAG,KAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,IAA+B,CAApD;;AACA,YAAME,kBAAkB,qBACnB,KAAKN,KAAL,CAAWC,WADQ,CAAxB;;AAGAK,MAAAA,kBAAkB,CAACF,IAAD,CAAlB,GAA2BC,YAA3B;AACA,YAAME,QAAQ,GAAG,KAAKP,KAAL,CAAWE,UAAX,GAAwBR,iBAAiB,CAACU,IAAD,CAA1D;AACA,WAAKI,QAAL,CAAc;AAACN,QAAAA,UAAU,EAAEK,QAAb;AAAuBN,QAAAA,WAAW,EAAEK;AAApC,OAAd;AAED,KApBmC;;AAAA,SAsBpCG,yBAtBoC,GAsBPL,IAAD,IAAU;AACpC,YAAMM,QAAQ,GAAG,KAAKV,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAjB;;AACA,UAAIM,QAAQ,IAAI,CAAhB,EAAmB;AACjB;AACD;;AACD,YAAMC,QAAQ,GAAGD,QAAQ,GAAE,CAA3B;;AACA,YAAMJ,kBAAkB,qBACnB,KAAKN,KAAL,CAAWC,WADQ,CAAxB;;AAGAK,MAAAA,kBAAkB,CAACF,IAAD,CAAlB,GAA2BO,QAA3B;AACA,YAAMJ,QAAQ,GAAG,KAAKP,KAAL,CAAWE,UAAX,GAAuBR,iBAAiB,CAACU,IAAD,CAAzD;AACA,WAAKI,QAAL,CAAc;AAACN,QAAAA,UAAU,EAAEK,QAAb;AAAuBN,QAAAA,WAAW,EAAEK;AAApC,OAAd;AAED,KAnCmC;AAAA;;AAqCpCM,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,qBACb,KAAKb,KAAL,CAAWC,WADE,CAAlB;;AAGA,SAAI,IAAIa,GAAR,IAAeD,YAAf,EAA6B;AAC3BA,MAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBD,YAAY,CAACC,GAAD,CAAZ,IAAqB,CAAzC;AACD;;AACD,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAI,KAAKd,KAAL,CAAWC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AACA,MAAA,KAAK,EAAK,KAAI,KAAKD,KAAL,CAAWE,UAAX,CAAsBa,OAAtB,CAA8B,CAA9B,CAAiC,EAD/C;AACkD,MAAA,eAAe,EAAI,KAAKZ,oBAD1E;AACgG,MAAA,oBAAoB,EAAI,KAAKM,yBAD7H;AACwJ,MAAA,QAAQ,EAAGI,YADnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AAnDmC;;AAsDtC,eAAed,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\n\nconst INGREDIENT_PRICES = {\n  salad: .25,\n  cheese: .25,\n  meat: .75,\n  bacon: .50\n}\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 2,\n  }\n\n  addIngredientHandler = (type) => {\n    const updatedCount = this.state.ingredients[type] + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    }\n    updatedIngredients[type] = updatedCount;\n    const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n\n  }\n\n  subtractIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const newCount = oldCount -1\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = newCount;\n    const newPrice = this.state.totalPrice -INGREDIENT_PRICES[type];\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n\n  }\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    };\n    for(let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0\n    }\n    return(\n      <Aux>\n        <Burger ingredients = {this.state.ingredients} />\n        <BuildControls\n        price = {`$ ${this.state.totalPrice.toFixed(2)}`} ingredientAdded = {this.addIngredientHandler} ingredientSubtracted = {this.subtractIngredientHandler} disabled ={disabledInfo}/>\n      </Aux>\n    );\n  }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}